# Fetch and pack Golang sources
#
# 1: Path to spec file (String)
#
# Code: No
# Echo: No
packGolangSources() {
  local spec="$1"
  local args sources output status

  sources=($(getSources "$spec"))

  if findSource "${sources[0]}" &>/dev/null ; then
    if [[ -n "$download" ]] ; then
      show "File ${CL_CYAN}${sources[0]}${CL_NORM} already created."
    fi

    return
  fi

  if [[ -n "$download" ]] ; then
    output="${download}/${sources[0]}"
  else
    output="${sources[0]}"
  fi

  args="-o $output"

  [[ -n "$revision" ]] && args="$args -r $revision"
  [[ -n "$branch" ]]   && args="$args -b $branch"
  [[ -n "$tag" ]]      && args="$args -t $tag"
  [[ -n "$verbose" ]]  && args="$args -V"

  args="$args $gopack"

  gopack $args

  if [[ $? -ne 0 ]] ; then
    showSeparator
    doExit 1
  fi
}