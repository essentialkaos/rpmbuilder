#!/bin/bash
# shellcheck disable=SC1117,SC2034,SC2086,SC2154,SC2181

################################################################################

# Validate package after build
#
# 1: Path to package file (String)
#
# Code: Yes
# Echo: No
validatePackage() {
  local rpm_file rpm_name

  rpm_file="$1"
  rpm_name=$(basename "$rpm_file")

  showm "${CL_CYAN}${rpm_name}:${CL_NORM} "

  if rpm -qp --scripts "$rpm_file" 2>&1 | grep -E -q '\%\{.*\}' ; then
    show "ERROR\n" $RED
    show "RPM package ${CL_BL_YELLOW}${rpm_name}${CL_YELLOW} contains unexpanded macroses in scriptlets:" $YELLOW
    show "${CL_GREY}"
    rpm -qp --scripts "$rpm_file" 2>&1 | grep -E -A1 -B1 '\%\{.*\}' | sed '/^$/d' | sed 's/^/  /g'
    show "${CL_NORM}"

    return 1
  fi

  if rpm -qlp "$rpm_file" 2>&1 | grep -E -q '\%\{.*\}' ; then
    show "ERROR\n" $RED
    show "RPM package ${CL_BL_YELLOW}${rpm_name}${CL_YELLOW} contains unexpanded macroses in files section:" $YELLOW
    show "${CL_GREY}"
    rpm -qlp "$rpm_file" 2>&1 | grep -E -A1 -B1 '\%\{.*\}' | sed '/^$/d' | sed 's/^/  /g'
    show "${CL_NORM}"

    return 1
  fi

  if [[ "$rpm_name" =~ \.src\. ]] ; then
    local pver cver

    pver=$(rpm -qp --qf "%{version}" "$rpm_file")
    cver=$(rpm -qp --changelog "$rpm_file" | head -1 | rev | cut -d"-" -f2 | rev | tr -d " ")

    if [[ "$pver" != "$cver" ]] ; then
      show "WARNING" $YELLOW
      show "RPM package version not equal to the version from the latest record in the changelog ($pver â‰  $cver)\n" $YELLOW

      return 0
    fi
  fi

  show "OK" $GREEN
  return 0
}
