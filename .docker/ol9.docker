## REGISTRY CONFIGURATION ######################################################

ARG REGISTRY="docker.io"

## FINAL IMAGE #################################################################

FROM ${REGISTRY}/essentialkaos/oraclelinux:9

ARG GOSU_VER=1.17
ARG HOSTNAME="rpmbuilder-ol9.docker.local"

LABEL org.opencontainers.image.title="RPMBuilder" \
      org.opencontainers.image.description="RPM package build helper (OracleLinux 9)" \
      org.opencontainers.image.vendor="ESSENTIAL KAOS" \
      org.opencontainers.image.authors="Anton Novojilov" \
      org.opencontainers.image.licenses="Apache-2.0" \
      org.opencontainers.image.url="https://kaos.sh/d/rpmbuilder" \
      org.opencontainers.image.source="https://github.com/essentialkaos/rpmbuilder"

# hadolint ignore=DL3031,DL3041
RUN <<EOF
  # Configure image environment
  echo "$HOSTNAME" > /etc/hostname
  dnf -y -q update oraclelinux-release
  dnf -y -q install https://pkgs.kaos.st/kaos-repo-latest.el9.noarch.rpm
  dnf -y -q install https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
  sed -i 's/gpgcheck=1/gpgcheck=1\nmodule_hotfixes=1/g' /etc/yum.repos.d/epel.repo
  dnf config-manager --set-enabled ol9_codeready_builder
  dnf -y -q install sudo make which file ncurses perl
  dnf -y -q install rpm-build spec-builddep rpmdevtools sshpass
  dnf -y -q install perfecto pwgen uv
  XDG_DATA_HOME=/usr/share uv tool install rpmlint --no-cache --no-progress --force
  ln -sf /usr/share/uv/tools/rpmlint/bin/rpmlint /usr/bin/rpmlint
  dnf -y -q remove uv
  dnf clean all
  rm -rf /var/cache/dnf /var/log/dnf.*
  curl -o /usr/local/bin/gosu -sSL "https://github.com/tianon/gosu/releases/download/$GOSU_VER/gosu-amd64"
  mkdir -p /home/builder/rpmbuild/BUILD \
           /home/builder/rpmbuild/BUILDROOT \
           /home/builder/rpmbuild/RPMS \
           /home/builder/rpmbuild/SOURCES \
           /home/builder/rpmbuild/SPECS \
           /home/builder/rpmbuild/SRPMS
  mkdir -p /usr/libexec/rpmbuilder \
           /home/builder/.config/rpmbuilder \
           /rpmbuilder
EOF

COPY SOURCES/conf/rpmmacros_el9 /home/builder/.rpmmacros
COPY SOURCES/conf/builder.sudoers /etc/sudoers.d/rpmbuilder
COPY SOURCES/rpmbuilder /usr/bin/rpmbuilder
COPY SOURCES/libexec/* /usr/libexec/rpmbuilder/

COPY .docker/entrypoint /usr/local/bin/entrypoint

RUN chmod +x /usr/local/bin/entrypoint \
             /usr/local/bin/gosu \
             /usr/bin/rpmbuilder

VOLUME /rpmbuilder
WORKDIR /rpmbuilder

ENTRYPOINT ["/usr/local/bin/entrypoint"]

################################################################################
